@using BAG.DOMAIN.Entities
@using Rad.Blazor.Services
@implements IDisposable
@rendermode InteractiveServer


<h3>Изделие дня</h3>
@if (ProductService.Products != null

				&& ProductService.Products.Count() != 0)
{
	<table class="table table-striped">
		<thead>
		<th>Название</th>
		<th></th>
			@foreach (var item in ProductService.Products)
			{
			<tr>
				<td>@item.BagName</td>
				<td>
					<button class="btn btn-outline-dark"
							@onclick="@(()=>OnBagiSelected(item.BagId))">
						Подробно
					</button>
				</td>
			</tr>
			}
		</thead>
	</table>
}
@code {
	[CascadingParameter]
	public IProductService<Bagi> ProductService { get; set; }
	[Parameter]
	public EventCallback<int> BagiSelected { get; set; }
	protected override async Task OnInitializedAsync()
	{
		ProductService.ListChanged += StateHasChanged;
	}
	public async void OnBagiSelected(int id)
	{
		await BagiSelected.InvokeAsync(id);
	}
	public void Dispose()
	{
		ProductService.ListChanged -= StateHasChanged;
	}
}